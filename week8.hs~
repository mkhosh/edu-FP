import System.IO

--main :: IO ()
-- main = do  
--     putStrLn "Hello, what's your name?"  
--     name <- getLine  
--     v <- act
--     print ("Hey " ++ name ++ ", you rock!" )  
--     print v
main = hangman

act :: IO (Char,Char)
act = do x <- getChar
         getChar
         y <- getChar
         return (x,y)

strlen :: IO ()
strlen = do putStrLn "Type something: "
            xs <- getLine
            putStr "Your thing has "
            putStr (show (length xs))
            putStrLn " characters."

hangman :: IO ()
hangman = do putStrLn "Think of a word:"
             word <- sgetLine
             putStrLn "Try to guess it"
             play word

sgetLine :: IO String
sgetLine = do x <- getCh
              if x == '\n' then
                do putChar x
                   return []
                else
                do putChar '-'
                   xs <- sgetLine
                   return (x:xs)


getCh :: IO Char
getCh = do hSetEcho stdin False
           x <- getChar
           hSetEcho stdin True
           return x

play :: String -> IO ()
play word = do putStr "? "
               guess <- getLine
               if guess == word then
                 putStrLn "You got it!"
                 else
                 do putStrLn (match word guess)
                    play word

match :: String -> String -> String
match xs ys = [if elem x ys then x else '-' | x <- xs]

next :: Int -> Int
next 1 = 2
next 2 = 1

type Board = [Int]

initial :: Board
initial = [5,4,3,2,1]

finished :: Board -> Bool
finished = all (== 0)
